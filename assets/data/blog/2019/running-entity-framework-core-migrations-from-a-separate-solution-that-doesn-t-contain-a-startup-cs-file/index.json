{"hash":"464cf9a22bcb0fc0812667758e4176a554f788ea","data":{"post":{"title":"Running Entity Framework Core migrations from a separate solution that doesn't contain a Startup.cs file.","path":"/blog/2019/running-entity-framework-core-migrations-from-a-separate-solution-that-doesn-t-contain-a-startup-cs-file/","date":"25 May 2019","timeToRead":3,"tags":[{"id":".NET Core","title":".NET Core","path":"/blog/tag/.NET%20Core/"}],"description":"After an hour of tearing my hair out...","content":"<h2 id=\"a-painful-introduction\"><a href=\"#a-painful-introduction\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>A painful introduction</h2>\n<p>I'll keep this one short as I currently need to figure out a way to stick my hair back on the  my head, after wasting the last hour tearing it all out.</p>\n<p>Basically, I'm currently in the middle of building a new side project using .NET Core.\nI'm trying to apply a Clean Architecture approach to it, avoiding your typical repository pattern approach but utilising EF Core with Identity as my persistence layer.</p>\n<p>Resultantly, this therefore meant that my migrations and DbContext had to live in a separate project to my Web API project which acts as a presentation layer and this caused some hiccups which I'll try to point out below.</p>\n<h2 id=\"prerequisites\"><a href=\"#prerequisites\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Prerequisites</h2>\n<p>Firstly, we must ensure that our AddDbContext in our Startup.cs class of our Web API project is pointing at the separate project which contains our actual DbContext implementation.</p>\n<pre class=\"language-csharp\"><code class=\"language-csharp\">  services<span class=\"token punctuation\">.</span><span class=\"token generic-method\"><span class=\"token function\">AddDbContext</span><span class=\"token generic class-name\"><span class=\"token punctuation\">&lt;</span>YourDbContext<span class=\"token punctuation\">></span></span></span><span class=\"token punctuation\">(</span>options <span class=\"token operator\">=></span>\n    options<span class=\"token punctuation\">.</span><span class=\"token function\">UseSqlServer</span><span class=\"token punctuation\">(</span>Configuration<span class=\"token punctuation\">.</span><span class=\"token function\">GetConnectionString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"YourConnectionString\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> x <span class=\"token operator\">=></span> x<span class=\"token punctuation\">.</span><span class=\"token function\">MigrationsAssembly</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">YourDbContext</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>Assembly<span class=\"token punctuation\">.</span>FullName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<h2 id=\"dotnet-ef-migrations-add-initialmigrations\"><a href=\"#dotnet-ef-migrations-add-initialmigrations\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>dotnet ef migrations add InitialMigrations</h2>\n<p>Usually when our DbContext exists within the same project as our Startup file, it takes a couple of seconds to generate and add our initial migrations via the awesome CLI that gets shipped with EF Core.</p>\n<p>However, in this scenario, I ran in to a couple of issues:</p>\n<p>After running the migrations add command in my Web API project...</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">info: Microsoft.EntityFrameworkCore.Infrastructure<span class=\"token punctuation\">[</span><span class=\"token number\">10403</span><span class=\"token punctuation\">]</span>\n      Entity Framework Core <span class=\"token number\">2.2</span>.4-servicing-10062 initialized <span class=\"token string\">'CleanstagramDbContext'</span> using provider <span class=\"token string\">'Microsoft.EntityFrameworkCore.SqlServer'</span> with options: <span class=\"token assign-left variable\">MigrationsAssembly</span><span class=\"token operator\">=</span>Cleanstagram.Persistence\nYour target project <span class=\"token string\">'Cleanstagram.Web'</span> doesn<span class=\"token string\">'t match your migrations assembly '</span>Cleanstagram.Persistence<span class=\"token string\">'. Either change your target project or change your migrations assembly.\nChange your migrations assembly by using DbContextOptionsBuilder. E.g. options.UseSqlServer(connection, b => b.MigrationsAssembly(\"Cleanstagram.Web\")). By default, the migrations assembly is the assembly containing the DbContext.\nChange your target project to the migrations project by using the Package Manager Console'</span>s Default project drop-down list, or by executing <span class=\"token string\">\"dotnet ef\"</span> from the directory containing the migrations project.</code></pre>\n<p>So this error was confusing as it was clear that it had picked up that my DbContext lived in a separate project. But fortunately it pointed me in the direction of changing my target project in the Package Manager console. So I did.</p>\n<p>Unfortunately after changing my target project/root directory in regular cmd/bash, this resulted in a separate error...</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">Unable to create an object of <span class=\"token builtin class-name\">type</span> <span class=\"token string\">'CleanstagramDbContext'</span><span class=\"token builtin class-name\">.</span> For the different patterns supported at design time, see https://go.microsoft.com/fwlink/?linkid<span class=\"token operator\">=</span><span class=\"token number\">851728</span></code></pre>\n<p>I was baffled, so I tried to add an OnModelCreating() override within my IdentityDbContext inheriting DbContext to see if it would help and to an extent it did. To a certain extent...</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">System.InvalidOperationException: The entity <span class=\"token builtin class-name\">type</span> <span class=\"token string\">'IdentityUserLogin&lt;string>'</span> requires a primary key to be defined.\n   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateNonNullPrimaryKeys<span class=\"token punctuation\">(</span>IModel model<span class=\"token punctuation\">)</span>\n   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate<span class=\"token punctuation\">(</span>IModel model<span class=\"token punctuation\">)</span>\n   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate<span class=\"token punctuation\">(</span>IModel model<span class=\"token punctuation\">)</span>\n   at Microsoft.EntityFrameworkCore.Internal.SqlServerModelValidator.Validate<span class=\"token punctuation\">(</span>IModel model<span class=\"token punctuation\">)</span>\n   at Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ValidatingConvention.Apply<span class=\"token punctuation\">(</span>InternalModelBuilder modelBuilder<span class=\"token punctuation\">)</span>\n   at Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.ImmediateConventionScope.OnModelBuilt<span class=\"token punctuation\">(</span>InternalModelBuilder modelBuilder<span class=\"token punctuation\">)</span>\n   at <span class=\"token punctuation\">..</span>.\nThe entity <span class=\"token builtin class-name\">type</span> <span class=\"token string\">'IdentityUserLogin&lt;string>'</span> requires a primary key to be defined.</code></pre>\n<p>But whilst it helped, it just ended up digging me down a deeper hole.</p>\n<p>So, the solution?</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">dotnet ef migrations <span class=\"token function\">add</span> InitialMigration --startup-project ./Cleanstagram.Web/ --project ./Cleanstagram.Persistence/</code></pre>\n<p>I had to go up a level to the parent of both projects and then specify both as shown above. A startup project and another project which specifies where the DbContext in this case lives. Straight away after running this, just by magic, my migrations were generated and I resultantly followed it up with a dotnet ef database update.</p>\n<p>This isn't much and it might be obvious to some, but judging from the hoarding of googling that I was going through, it was quite a common issue without a specific one size fits all solution that is easy to find online. So hopefully this helps some other poor sod out there.</p>\n<p>Thanks for reading!</p>\n","cover_image":{"type":"image","mimeType":"image/jpeg","src":"/assets/static/campaign-creators-IKHvOlZFCOg-unsplash.07cc2b7.2b434c2735c3ca2606b41eba4d07664a.jpg","size":{"width":860,"height":574},"sizes":"(max-width: 860px) 100vw, 860px","srcset":["/assets/static/campaign-creators-IKHvOlZFCOg-unsplash.a67b0b2.2b434c2735c3ca2606b41eba4d07664a.jpg 480w","/assets/static/campaign-creators-IKHvOlZFCOg-unsplash.07cc2b7.2b434c2735c3ca2606b41eba4d07664a.jpg 860w"],"dataUri":"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 860 574' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-da7ecb680eb188a82e9acd16c48028da'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='10'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-da7ecb680eb188a82e9acd16c48028da)' width='860' height='574' xlink:href='data:image/jpeg%3bbase64%2c/9j/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAArAEADASIAAhEBAxEB/8QAGgABAAIDAQAAAAAAAAAAAAAABgUHAgMEAP/EADEQAAIBAgQEBAUDBQAAAAAAAAECAwQRAAUSIQYTMUEUIlFhB0JxgZEjQ7FigqHB8P/EABkBAAMAAwAAAAAAAAAAAAAAAAMEBQECBv/EACYRAAEEAQQABgMAAAAAAAAAAAEAAgMEERIhMUETI1FxgcEFFNH/2gAMAwEAAhEDEQA/AMOCKtpslcUUEoykPLSoWUaS4fSzA9Re/Q9vvjHjOSal8XWQUisArUpcxs2pF3Qrp9yd/XHbxLlObQ5RWV%2bWlJaeapNVLTUsgBZrI3MUfMx6sg77j0xXWTeP4x4g8PR8xoWYTVVOJeVGyg2J237i5O%2b/tgVjIOCmaeBgjgcqb%2bH1KsWVc2TQKiqe533IXa%2b%2b/qcJmYEXRlYHoVN74j6So8NXUNPTvD4CVy8bHUAAgYEANtbbfobYU0FBBV1NDO6wMC7VEmkjSiMAota9yO%2bwBN/TBatzDQzTsEl%2bQoGWQy69z1hS%2bTTQxfDtJ1kUnxEsbkMDoJNt/Sxt%2bcTEjxS%2bEanuY2p0YHSQDt7/AMYNU6Q0NPBBSDlwRt4nRqHmitbmEL0uT369Da2NrVMWXP8ApWghZJWdwwsj62GrSCdRGkdrC5uemGw/VvhJGvpAGUf4yUycQsEcI8YUg/VBjVk2Vy1FTE0XkgikBaU%2bxvYfjCoUOU1iha2nSedb2mLEtp1MFZmuCRYdd79sHOJ8wqciynMpqR6OhoqZSyu7nmEkEqqruLk9ycTJqjg8ynhXa11ro21wdwFIZBBXZRNFBIlNV0UEmiKPlhZI1u/W5t5tQBbrtfc4j6bJnyqbxctPlsFdXySgmmpzAY42t5Cx3bzKLk%2boPfG3hqvOb0Ymng5cx5sU5J3QXNnKk7g6fseg649nfEtLAiPTMy8leY8pXWkQCgA26hre5ubb74AZCW4KN4YDshB%2bJOHYGShmE1RTOrSBYljB1kyEW62Nz3GGGV5UlNCsaVBEZHnAU3c/1EtuPbBLifOoxn%2bXx8wOsVLHJZFN2kkuxNjv8xP92EL5ytJl61HImqNwNEQu31%2bmLVaFgga/tc5bsSfsuZ10kdBSR0fOkhqZzPIoXXJZrWFtvaxO2MJqOeTQWzasszrqtHFta5X5el/ybE9MTdDkwB5lRPFUrYELC11NxexOI/NBOOakNDDEwNolSo1Frb%2bYEbb9%2bmBPsRsfoTMdSaSMybKBzOkhWeRGjWZUICKF5ekW2B09Rck7%2bpxXnF8cMDrDNFHNKsQKs41aL3FhfFkc0tUyOWDE2uQb9sVf8Qpr55Nf5VQDb2xIlke%2bUgk8q/ViYyIENHHonPHCV%2bU8RTvTz1PhqpFdmi2BYA3Yd79NvQkeuOGgyo5nDL4lohSKL1JdSCFHS57NuPN/wd/ElRLlzwyXMYlQgA2tfV3H0wT58tPDniROVSKgjKDrbyqO/wBT%2bcYe3DsBasfluSq842rIzxhJNFGkQnUNZRawBIA/AGE2QVbzaBAJJGVSSEBNgPW3bFoZb8POFa%2bsyyatyeKeQ0isTJI5BOx3Gqx6nCuGjpctkSiy%2blp6aldWVooolUMNDdbD2xYqTFkePRQrtZskpPGVAcGoxyWNmsA13%2bxO2DOe5jUz8Tzwgo2XxxAXNiTJc3t6WH84Q53US0WRyNStyyF2sBttivKaR2YMzEsdyT3wOCEWH639b/KYszGpF4cfe3x/V0mv0VciqhKFzdh0XFY8d1QmzyrAYHSVH%2bBhfWzSJO2hiP1rfbfFacSuzZ9W3P7g/wBYmlvnH3%2b1XiPkD2%2bl/9k=' /%3e%3c/svg%3e"},"cover_image_credits":"<a href='https://unsplash.com/@campaign_creators'>Campaign Creators</a>"}},"context":{}}